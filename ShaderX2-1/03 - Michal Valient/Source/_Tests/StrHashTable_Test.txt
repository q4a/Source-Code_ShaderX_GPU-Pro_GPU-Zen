class CInt : public CRootClass {
public:
    int v;

    CInt(int val) : CRootClass() { 
        _LOG("CInt", NULL, D3_DVLEVEL6,"New Int %i", val);
        v = val;
    };

    virtual ~CInt() {
        _LOG("CInt", NULL, D3_DVLEVEL6,"Delete Int %i", v);
    }

};



    CStrHashTable *ht = NewObj CStrHashTable(true);

    //AddTest
    FILE *f = fopen("StrHashTable_data.txt","rt");
    char tmp[1024];
    for (int i=0; i<42; i++) {
        fscanf(f,"%s\n",tmp);
        CMString Key = tmp;
        CInt *Intt = NewObj CInt(i);
        ht->Add(Key,*Intt);
    }
    fclose(f);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //Stability test
    ht->GrowTable(0);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //OverwriteTest
    f = fopen("StrHashTable_data.txt","rt");
    tmp[1024];
    for (int i=0; i<42; i++) {
        fscanf(f,"%s\n",tmp);
        CMString Key = tmp;
        CInt *Intt = NewObj CInt(i);
        ht->Add(Key,*Intt);
    }
    fclose(f);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //GetTest
    f = fopen("StrHashTable_data.txt","rt");
    tmp[1024];
    for (int i=0; i<42; i++) {
        fscanf(f,"%s\n",tmp);
        CMString Key = tmp;
        CInt *Intt = (CInt *)ht->Get(Key);
        if (Intt!=NULL && Intt->v!=i) _LOG("MainLoop",NULL,D3_DVLEVEL6,"Get returned wrong object exp. %i, ret %i",i,Intt->v);
    }
    fclose(f);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //DeleteTest
    f = fopen("StrHashTable_data.txt","rt");
    tmp[1024];
    for (int i=0; i<42; i++) {
        fscanf(f,"%s\n",tmp);
        CMString Key = tmp;
        if (i % 4 == 0) ht->Delete(Key);
    }
    fclose(f);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //GetTest
    f = fopen("StrHashTable_data.txt","rt");
    tmp[1024];
    for (int i=0; i<42; i++) {
        fscanf(f,"%s\n",tmp);
        CMString Key = tmp;
        CInt *Intt = (CInt *)ht->Get(Key);
        if (Intt!=NULL && Intt->v!=i) _LOG("MainLoop",NULL,D3_DVLEVEL6,"Get returned wrong object exp. %i, ret %i",i,Intt->v);
    }
    fclose(f);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //EraseTest
    f = fopen("StrHashTable_data.txt","rt");
    tmp[1024];
    for (int i=0; i<42; i++) {
        fscanf(f,"%s\n",tmp);
        CMString Key = tmp;
        if (i % 2 == 0) {
            CInt *Intt = (CInt *)ht->Erase(Key);
            if (Intt!=NULL && Intt->v!=i) _LOG("MainLoop",NULL,D3_DVLEVEL6,"Erase returned wrong object exp. %i, ret %i",i,Intt->v);
            if (Intt==NULL) _LOG("MainLoop",NULL,D3_DVLEVEL6,"Erase returned NULL object for key %i",i);
            else DeleteObj Intt;
        }
    }
    fclose(f);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //GetTest
    f = fopen("StrHashTable_data.txt","rt");
    tmp[1024];
    for (int i=0; i<42; i++) {
        fscanf(f,"%s\n",tmp);
        CMString Key = tmp;
        CInt *Intt = (CInt *)ht->Get(Key);
        if (Intt!=NULL && Intt->v!=i) _LOG("MainLoop",NULL,D3_DVLEVEL6,"Get returned wrong object exp. %i, ret %i",i,Intt->v);
    }
    fclose(f);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //Stability test
    ht->GrowTable(0);
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());

    //IteratorTest
    sHashItem item;
    int iter = ht->GetFirstItem(item);
    while (iter>=0) {
        _LOG("MainLoop",NULL,D3_DVLEVEL6,"Iterator returned Key %s, Value %i, Callback %i",((CMString*)item.Key)->c_str(), item.Value, item.CallbackValue);
        iter = ht->GetNextItem(item);
    }
    _LOG("MainLoop",NULL,D3_DVLEVEL6,"Item count %i",ht->GetItemCount());
    DeleteObj ht;
    return 0;
