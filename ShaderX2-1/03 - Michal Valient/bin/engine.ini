[ini]
//version of ini file.
version=100

[engine]
//this specifies log file for engine.
logfile=.\engine.log

[resources]
resourcelocationcount = 4
resourcelocation_1 = .\Resources\Textures
resourcelocation_2 = .\Resources\Shaders
resourcelocation_3 = .\Resources\Scenes
resourcelocation_4 = .\Resources\Required


[graphics]
//adapter index (0=default)
adapter=0

//1 = HAL, 2 = reference rasterizer
devicetype=1

//1 = yes, 0 = no
fullscreen=0

//window (screen) width
//width=640
width=1024
//width=1280
//width=320

//window (screen) height
//height=480
height=768
//height=1024
//height=240

//refresh rate (in Hz)
refresh=75

//bytes per pixel
bpp=32

//z buffer depth (in bits), 0 means no z buffer (and no stencil buffer!)
zbuffer=24

//stencil buffer depth (in bits) 0 means no stencil buffer
stencil=8

//number of backbuffers
backbuffercount = 2

//Multi sample level (0 = none, 2-16 = multisampling enabled at level
multisample = 0

//D3DDevice behavior flags (separate with | (bitwise or in C++))
//Supported are these:
//    D3DCREATE_FPU_PRESERVE - Indicates that the application needs either 
//        double precision floating-point unit (FPU) or FPU exceptions enabled. 
//        Direct3D sets the FPU state each time it is called. Setting the flag 
//        will reduce Direct3D performance. 
//    D3DCREATE_HARDWARE_VERTEXPROCESSING - Specifies hardware vertex processing.
//    D3DCREATE_MIXED_VERTEXPROCESSING - Specifies mixed (both software and hardware) 
//        vertex processing. See Remarks. 
//    D3DCREATE_MULTITHREADED - Indicates that the application requests Direct3D 
//        to be multithread safe. This makes Direct3D take its global critical section 
//        more frequently, which can degrade performance. 
//    D3DCREATE_PUREDEVICE - Specifies that Direct3D does not support Get* calls for 
//        anything that can be stored in state blocks. It also tells Direct3D not to 
//        provide any emulation services for vertex processing. This means that if the 
//        device does not support vertex processing, then the application can use 
//        only post-transformed vertices.
//    D3DCREATE_SOFTWARE_VERTEXPROCESSING - Specifies software vertex processing.. 
//    D3DCREATE_DISABLE_DRIVER_MANAGEMENT - Specifies that Direct3D should manage resources 
//        instead of the driver.
//!!!Note that one and only one XXX_VERTEXPROCESSING has to be specified!!!
behaviorflags = D3DCREATE_HARDWARE_VERTEXPROCESSING | D3DCREATE_PUREDEVICE
//behaviorflags = D3DCREATE_HARDWARE_VERTEXPROCESSING
//behaviorflags = D3DCREATE_SOFTWARE_VERTEXPROCESSING
